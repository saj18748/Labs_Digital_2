

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Fri Jan 29 00:03:05 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0008                     _PORTDbits	set	8
   206  0007                     _PORTCbits	set	7
   207  0006                     _PORTB	set	6
   208  0008                     _PORTD	set	8
   209  0007                     _PORTC	set	7
   210  0009                     _PORTE	set	9
   211  0006                     _PORTBbits	set	6
   212  0086                     _TRISB	set	134
   213  0088                     _TRISD	set	136
   214  0087                     _TRISC	set	135
   215  0089                     _TRISE	set	137
   216  0189                     _ANSELH	set	393
   217  0188                     _ANSEL	set	392
   218                           
   219                           	psect	cinit
   220  07FA                     start_initialization:	
   221                           ; #config settings
   222                           
   223  07FA                     __initialization:
   224                           
   225                           ; Clear objects allocated to COMMON
   226  07FA  01F8               	clrf	__pbssCOMMON& (0+127)
   227  07FB  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   228  07FC                     end_of_initialization:	
   229                           ;End of C runtime variable initialization code
   230                           
   231  07FC                     __end_of__initialization:
   232  07FC  0183               	clrf	3
   233  07FD  120A  118A  2FA4   	ljmp	_main	;jump to C main() function
   234                           
   235                           	psect	bssCOMMON
   236  0078                     __pbssCOMMON:
   237  0078                     _flag:
   238  0078                     	ds	2
   239                           
   240                           	psect	cstackCOMMON
   241  0070                     __pcstackCOMMON:
   242  0070                     ?_setup:
   243  0070                     ??_setup:	
   244                           ; 1 bytes @ 0x0
   245                           
   246  0070                     ?_semaforo:	
   247                           ; 1 bytes @ 0x0
   248                           
   249  0070                     ??_semaforo:	
   250                           ; 1 bytes @ 0x0
   251                           
   252  0070                     ?_cont_uno:	
   253                           ; 1 bytes @ 0x0
   254                           
   255  0070                     ??_cont_uno:	
   256                           ; 1 bytes @ 0x0
   257                           
   258  0070                     ?_cont_dos:	
   259                           ; 1 bytes @ 0x0
   260                           
   261  0070                     ??_cont_dos:	
   262                           ; 1 bytes @ 0x0
   263                           
   264  0070                     ?_main:	
   265                           ; 1 bytes @ 0x0
   266                           
   267                           
   268                           ; 1 bytes @ 0x0
   269  0070                     	ds	3
   270  0073                     semaforo@i:
   271                           
   272                           ; 2 bytes @ 0x3
   273  0073                     	ds	2
   274  0075                     ??_main:
   275                           
   276                           ; 1 bytes @ 0x5
   277  0075                     	ds	3
   278                           
   279                           	psect	maintext
   280  07A4                     __pmaintext:	
   281 ;;
   282 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   283 ;;
   284 ;; *************** function _main *****************
   285 ;; Defined at:
   286 ;;		line 48 in file "Lab 1.c"
   287 ;; Parameters:    Size  Location     Type
   288 ;;		None
   289 ;; Auto vars:     Size  Location     Type
   290 ;;		None
   291 ;; Return value:  Size  Location     Type
   292 ;;                  1    wreg      void 
   293 ;; Registers used:
   294 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   295 ;; Tracked objects:
   296 ;;		On entry : B00/0
   297 ;;		On exit  : 0/0
   298 ;;		Unchanged: 0/0
   299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   300 ;;      Params:         0       0       0       0       0
   301 ;;      Locals:         0       0       0       0       0
   302 ;;      Temps:          3       0       0       0       0
   303 ;;      Totals:         3       0       0       0       0
   304 ;;Total ram usage:        3 bytes
   305 ;; Hardware stack levels required when called:    1
   306 ;; This function calls:
   307 ;;		_cont_dos
   308 ;;		_cont_uno
   309 ;;		_semaforo
   310 ;;		_setup
   311 ;; This function is called by:
   312 ;;		Startup code after reset
   313 ;; This function uses a non-reentrant model
   314 ;;
   315                           
   316                           
   317                           ;psect for function _main
   318  07A4                     _main:
   319  07A4                     l725:	
   320                           ;incstack = 0
   321                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   322                           
   323                           
   324                           ;Lab 1.c: 50:     setup();
   325  07A4  120A  118A  2744  120A  118A  	fcall	_setup
   326  07A9                     l727:
   327                           
   328                           ;Lab 1.c: 53:     {;Lab 1.c: 54:         if ((PORTBbits.RB0 == 1) && (!flag))
   329  07A9  1283               	bcf	3,5	;RP0=0, select bank0
   330  07AA  1303               	bcf	3,6	;RP1=0, select bank0
   331  07AB  1C06               	btfss	6,0	;volatile
   332  07AC  2FAE               	goto	u61
   333  07AD  2FAF               	goto	u60
   334  07AE                     u61:
   335  07AE  2FBA               	goto	l733
   336  07AF                     u60:
   337  07AF                     l729:
   338  07AF  0878               	movf	_flag,w
   339  07B0  0479               	iorwf	_flag+1,w
   340  07B1  1D03               	btfss	3,2
   341  07B2  2FB4               	goto	u71
   342  07B3  2FB5               	goto	u70
   343  07B4                     u71:
   344  07B4  2FBA               	goto	l733
   345  07B5                     u70:
   346  07B5                     l731:
   347                           
   348                           ;Lab 1.c: 55:         { semaforo();}
   349  07B5  120A  118A  2762  120A  118A  	fcall	_semaforo
   350  07BA                     l733:
   351                           
   352                           ;Lab 1.c: 57:         if ((PORTBbits.RB1 == 1) && (flag))
   353  07BA  1283               	bcf	3,5	;RP0=0, select bank0
   354  07BB  1303               	bcf	3,6	;RP1=0, select bank0
   355  07BC  1C86               	btfss	6,1	;volatile
   356  07BD  2FBF               	goto	u81
   357  07BE  2FC0               	goto	u80
   358  07BF                     u81:
   359  07BF  2FD8               	goto	l741
   360  07C0                     u80:
   361  07C0                     l735:
   362  07C0  0878               	movf	_flag,w
   363  07C1  0479               	iorwf	_flag+1,w
   364  07C2  1903               	btfsc	3,2
   365  07C3  2FC5               	goto	u91
   366  07C4  2FC6               	goto	u90
   367  07C5                     u91:
   368  07C5  2FD8               	goto	l741
   369  07C6                     u90:
   370  07C6                     l737:
   371                           
   372                           ;Lab 1.c: 58:         { cont_uno();
   373  07C6  120A  118A  2726  120A  118A  	fcall	_cont_uno
   374  07CB                     l739:
   375                           
   376                           ;Lab 1.c: 59:            _delay((unsigned long)((100)*(8000000/4000.0))); }
   377  07CB  3002               	movlw	2
   378  07CC  00F7               	movwf	??_main+2
   379  07CD  3004               	movlw	4
   380  07CE  00F6               	movwf	??_main+1
   381  07CF  30BA               	movlw	186
   382  07D0  00F5               	movwf	??_main
   383  07D1                     u127:
   384  07D1  0BF5               	decfsz	??_main,f
   385  07D2  2FD1               	goto	u127
   386  07D3  0BF6               	decfsz	??_main+1,f
   387  07D4  2FD1               	goto	u127
   388  07D5  0BF7               	decfsz	??_main+2,f
   389  07D6  2FD1               	goto	u127
   390  07D7  0000               	nop
   391  07D8                     l741:
   392                           
   393                           ;Lab 1.c: 61:         if ((PORTBbits.RB2 == 1) && (flag))
   394  07D8  1283               	bcf	3,5	;RP0=0, select bank0
   395  07D9  1303               	bcf	3,6	;RP1=0, select bank0
   396  07DA  1D06               	btfss	6,2	;volatile
   397  07DB  2FDD               	goto	u101
   398  07DC  2FDE               	goto	u100
   399  07DD                     u101:
   400  07DD  2FA9               	goto	l727
   401  07DE                     u100:
   402  07DE                     l743:
   403  07DE  0878               	movf	_flag,w
   404  07DF  0479               	iorwf	_flag+1,w
   405  07E0  1903               	btfsc	3,2
   406  07E1  2FE3               	goto	u111
   407  07E2  2FE4               	goto	u110
   408  07E3                     u111:
   409  07E3  2FA9               	goto	l727
   410  07E4                     u110:
   411  07E4                     l745:
   412                           
   413                           ;Lab 1.c: 62:         { cont_dos();
   414  07E4  120A  118A  2708  120A  118A  	fcall	_cont_dos
   415  07E9                     l747:
   416                           
   417                           ;Lab 1.c: 63:            _delay((unsigned long)((100)*(8000000/4000.0))); }
   418  07E9  3002               	movlw	2
   419  07EA  00F7               	movwf	??_main+2
   420  07EB  3004               	movlw	4
   421  07EC  00F6               	movwf	??_main+1
   422  07ED  30BA               	movlw	186
   423  07EE  00F5               	movwf	??_main
   424  07EF                     u137:
   425  07EF  0BF5               	decfsz	??_main,f
   426  07F0  2FEF               	goto	u137
   427  07F1  0BF6               	decfsz	??_main+1,f
   428  07F2  2FEF               	goto	u137
   429  07F3  0BF7               	decfsz	??_main+2,f
   430  07F4  2FEF               	goto	u137
   431  07F5  0000               	nop
   432  07F6  2FA9               	goto	l727
   433  07F7  120A  118A  2800   	ljmp	start
   434  07FA                     __end_of_main:
   435                           
   436                           	psect	text1
   437  0744                     __ptext1:	
   438 ;; *************** function _setup *****************
   439 ;; Defined at:
   440 ;;		line 70 in file "Lab 1.c"
   441 ;; Parameters:    Size  Location     Type
   442 ;;		None
   443 ;; Auto vars:     Size  Location     Type
   444 ;;		None
   445 ;; Return value:  Size  Location     Type
   446 ;;                  1    wreg      void 
   447 ;; Registers used:
   448 ;;		wreg, status,2
   449 ;; Tracked objects:
   450 ;;		On entry : 0/0
   451 ;;		On exit  : 0/0
   452 ;;		Unchanged: 0/0
   453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   454 ;;      Params:         0       0       0       0       0
   455 ;;      Locals:         0       0       0       0       0
   456 ;;      Temps:          0       0       0       0       0
   457 ;;      Totals:         0       0       0       0       0
   458 ;;Total ram usage:        0 bytes
   459 ;; Hardware stack levels used:    1
   460 ;; This function calls:
   461 ;;		Nothing
   462 ;; This function is called by:
   463 ;;		_main
   464 ;; This function uses a non-reentrant model
   465 ;;
   466                           
   467                           
   468                           ;psect for function _setup
   469  0744                     _setup:
   470  0744                     l663:	
   471                           ;incstack = 0
   472                           ; Regs used in _setup: [wreg+status,2]
   473                           
   474                           
   475                           ;Lab 1.c: 72:     ANSEL = 0;
   476  0744  1683               	bsf	3,5	;RP0=1, select bank3
   477  0745  1703               	bsf	3,6	;RP1=1, select bank3
   478  0746  0188               	clrf	8	;volatile
   479                           
   480                           ;Lab 1.c: 73:     ANSELH = 0;
   481  0747  0189               	clrf	9	;volatile
   482                           
   483                           ;Lab 1.c: 76:     TRISE = 0;
   484  0748  1683               	bsf	3,5	;RP0=1, select bank1
   485  0749  1303               	bcf	3,6	;RP1=0, select bank1
   486  074A  0189               	clrf	9	;volatile
   487                           
   488                           ;Lab 1.c: 77:     PORTE = 0;
   489  074B  1283               	bcf	3,5	;RP0=0, select bank0
   490  074C  1303               	bcf	3,6	;RP1=0, select bank0
   491  074D  0189               	clrf	9	;volatile
   492                           
   493                           ;Lab 1.c: 79:     TRISC = 0;
   494  074E  1683               	bsf	3,5	;RP0=1, select bank1
   495  074F  1303               	bcf	3,6	;RP1=0, select bank1
   496  0750  0187               	clrf	7	;volatile
   497                           
   498                           ;Lab 1.c: 80:     PORTC = 0;
   499  0751  1283               	bcf	3,5	;RP0=0, select bank0
   500  0752  1303               	bcf	3,6	;RP1=0, select bank0
   501  0753  0187               	clrf	7	;volatile
   502                           
   503                           ;Lab 1.c: 83:     TRISD= 0;
   504  0754  1683               	bsf	3,5	;RP0=1, select bank1
   505  0755  1303               	bcf	3,6	;RP1=0, select bank1
   506  0756  0188               	clrf	8	;volatile
   507                           
   508                           ;Lab 1.c: 84:     PORTD = 0;
   509  0757  1283               	bcf	3,5	;RP0=0, select bank0
   510  0758  1303               	bcf	3,6	;RP1=0, select bank0
   511  0759  0188               	clrf	8	;volatile
   512  075A                     l665:
   513                           
   514                           ;Lab 1.c: 87:     TRISB = 0B00000111;
   515  075A  3007               	movlw	7
   516  075B  1683               	bsf	3,5	;RP0=1, select bank1
   517  075C  1303               	bcf	3,6	;RP1=0, select bank1
   518  075D  0086               	movwf	6	;volatile
   519  075E                     l667:
   520                           
   521                           ;Lab 1.c: 88:     PORTB = 0;
   522  075E  1283               	bcf	3,5	;RP0=0, select bank0
   523  075F  1303               	bcf	3,6	;RP1=0, select bank0
   524  0760  0186               	clrf	6	;volatile
   525  0761                     l52:
   526  0761  0008               	return
   527  0762                     __end_of_setup:
   528                           
   529                           	psect	text2
   530  0762                     __ptext2:	
   531 ;; *************** function _semaforo *****************
   532 ;; Defined at:
   533 ;;		line 91 in file "Lab 1.c"
   534 ;; Parameters:    Size  Location     Type
   535 ;;		None
   536 ;; Auto vars:     Size  Location     Type
   537 ;;  i               2    3[COMMON] int 
   538 ;; Return value:  Size  Location     Type
   539 ;;                  1    wreg      void 
   540 ;; Registers used:
   541 ;;		wreg, status,2, status,0, btemp+1
   542 ;; Tracked objects:
   543 ;;		On entry : 0/0
   544 ;;		On exit  : 0/0
   545 ;;		Unchanged: 0/0
   546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   547 ;;      Params:         0       0       0       0       0
   548 ;;      Locals:         2       0       0       0       0
   549 ;;      Temps:          3       0       0       0       0
   550 ;;      Totals:         5       0       0       0       0
   551 ;;Total ram usage:        5 bytes
   552 ;; Hardware stack levels used:    1
   553 ;; This function calls:
   554 ;;		Nothing
   555 ;; This function is called by:
   556 ;;		_main
   557 ;; This function uses a non-reentrant model
   558 ;;
   559                           
   560                           
   561                           ;psect for function _semaforo
   562  0762                     _semaforo:
   563  0762                     l669:	
   564                           ;incstack = 0
   565                           ; Regs used in _semaforo: [wreg+status,2+status,0+btemp+1]
   566                           
   567                           
   568                           ;Lab 1.c: 93:     PORTE = 1;
   569  0762  3001               	movlw	1
   570  0763  1283               	bcf	3,5	;RP0=0, select bank0
   571  0764  1303               	bcf	3,6	;RP1=0, select bank0
   572  0765  0089               	movwf	9	;volatile
   573                           
   574                           ;Lab 1.c: 94:     _delay((unsigned long)((100)*(8000000/4000.0)));
   575  0766  3002               	movlw	2
   576  0767  00F2               	movwf	??_semaforo+2
   577  0768  3004               	movlw	4
   578  0769  00F1               	movwf	??_semaforo+1
   579  076A  30BA               	movlw	186
   580  076B  00F0               	movwf	??_semaforo
   581  076C                     u147:
   582  076C  0BF0               	decfsz	??_semaforo,f
   583  076D  2F6C               	goto	u147
   584  076E  0BF1               	decfsz	??_semaforo+1,f
   585  076F  2F6C               	goto	u147
   586  0770  0BF2               	decfsz	??_semaforo+2,f
   587  0771  2F6C               	goto	u147
   588  0772  0000               	nop
   589  0773                     l671:
   590                           
   591                           ;Lab 1.c: 98:     for(int i=0; i<=2; i++)
   592  0773  01F3               	clrf	semaforo@i
   593  0774  01F4               	clrf	semaforo@i+1
   594  0775                     l677:
   595                           
   596                           ;Lab 1.c: 99:     { PORTE = PORTE <<1;
   597  0775  1283               	bcf	3,5	;RP0=0, select bank0
   598  0776  1303               	bcf	3,6	;RP1=0, select bank0
   599  0777  0809               	movf	9,w	;volatile
   600  0778  00F0               	movwf	??_semaforo
   601  0779  0770               	addwf	??_semaforo,w
   602  077A  0089               	movwf	9	;volatile
   603  077B                     l679:
   604                           
   605                           ;Lab 1.c: 100:         _delay((unsigned long)((200)*(8000000/4000.0))); }
   606  077B  3003               	movlw	3
   607  077C  00F2               	movwf	??_semaforo+2
   608  077D  3008               	movlw	8
   609  077E  00F1               	movwf	??_semaforo+1
   610  077F  3077               	movlw	119
   611  0780  00F0               	movwf	??_semaforo
   612  0781                     u157:
   613  0781  0BF0               	decfsz	??_semaforo,f
   614  0782  2F81               	goto	u157
   615  0783  0BF1               	decfsz	??_semaforo+1,f
   616  0784  2F81               	goto	u157
   617  0785  0BF2               	decfsz	??_semaforo+2,f
   618  0786  2F81               	goto	u157
   619  0787                     l681:
   620  0787  3001               	movlw	1
   621  0788  07F3               	addwf	semaforo@i,f
   622  0789  1803               	skipnc
   623  078A  0AF4               	incf	semaforo@i+1,f
   624  078B  3000               	movlw	0
   625  078C  07F4               	addwf	semaforo@i+1,f
   626  078D                     l683:
   627  078D  0874               	movf	semaforo@i+1,w
   628  078E  3A80               	xorlw	128
   629  078F  00FF               	movwf	btemp+1
   630  0790  3080               	movlw	128
   631  0791  027F               	subwf	btemp+1,w
   632  0792  1D03               	skipz
   633  0793  2F96               	goto	u15
   634  0794  3003               	movlw	3
   635  0795  0273               	subwf	semaforo@i,w
   636  0796                     u15:
   637  0796  1C03               	skipc
   638  0797  2F99               	goto	u11
   639  0798  2F9A               	goto	u10
   640  0799                     u11:
   641  0799  2F75               	goto	l677
   642  079A                     u10:
   643  079A                     l685:
   644                           
   645                           ;Lab 1.c: 103:     flag = 1;
   646  079A  3001               	movlw	1
   647  079B  00F8               	movwf	_flag
   648  079C  3000               	movlw	0
   649  079D  00F9               	movwf	_flag+1
   650  079E                     l687:
   651                           
   652                           ;Lab 1.c: 104:     PORTD = 0;
   653  079E  1283               	bcf	3,5	;RP0=0, select bank0
   654  079F  1303               	bcf	3,6	;RP1=0, select bank0
   655  07A0  0188               	clrf	8	;volatile
   656  07A1                     l689:
   657                           
   658                           ;Lab 1.c: 105:     PORTB = 0;
   659  07A1  0186               	clrf	6	;volatile
   660  07A2                     l691:
   661                           
   662                           ;Lab 1.c: 106:     PORTC = 0;
   663  07A2  0187               	clrf	7	;volatile
   664  07A3                     l57:
   665  07A3  0008               	return
   666  07A4                     __end_of_semaforo:
   667                           
   668                           	psect	text3
   669  0726                     __ptext3:	
   670 ;; *************** function _cont_uno *****************
   671 ;; Defined at:
   672 ;;		line 109 in file "Lab 1.c"
   673 ;; Parameters:    Size  Location     Type
   674 ;;		None
   675 ;; Auto vars:     Size  Location     Type
   676 ;;		None
   677 ;; Return value:  Size  Location     Type
   678 ;;                  1    wreg      void 
   679 ;; Registers used:
   680 ;;		wreg, status,2, status,0, btemp+1
   681 ;; Tracked objects:
   682 ;;		On entry : 0/0
   683 ;;		On exit  : 0/0
   684 ;;		Unchanged: 0/0
   685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   686 ;;      Params:         0       0       0       0       0
   687 ;;      Locals:         0       0       0       0       0
   688 ;;      Temps:          1       0       0       0       0
   689 ;;      Totals:         1       0       0       0       0
   690 ;;Total ram usage:        1 bytes
   691 ;; Hardware stack levels used:    1
   692 ;; This function calls:
   693 ;;		Nothing
   694 ;; This function is called by:
   695 ;;		_main
   696 ;; This function uses a non-reentrant model
   697 ;;
   698                           
   699                           
   700                           ;psect for function _cont_uno
   701  0726                     _cont_uno:
   702  0726                     l693:	
   703                           ;incstack = 0
   704                           ; Regs used in _cont_uno: [wreg+status,2+status,0+btemp+1]
   705                           
   706                           
   707                           ;Lab 1.c: 111:     if (PORTC == 0)
   708  0726  1283               	bcf	3,5	;RP0=0, select bank0
   709  0727  1303               	bcf	3,6	;RP1=0, select bank0
   710  0728  0807               	movf	7,w	;volatile
   711  0729  1D03               	btfss	3,2
   712  072A  2F2C               	goto	u21
   713  072B  2F2D               	goto	u20
   714  072C                     u21:
   715  072C  2F34               	goto	l699
   716  072D                     u20:
   717  072D                     l695:
   718                           
   719                           ;Lab 1.c: 112:     { PORTC = PORTC++; }
   720  072D  0807               	movf	7,w	;volatile
   721  072E  0087               	movwf	7	;volatile
   722  072F                     l697:
   723  072F  3001               	movlw	1
   724  0730  00FF               	movwf	btemp+1
   725  0731  087F               	movf	btemp+1,w
   726  0732  0787               	addwf	7,f	;volatile
   727  0733  2F43               	goto	l64
   728  0734                     l699:
   729                           
   730                           ;Lab 1.c: 114:     {;Lab 1.c: 115:         PORTC = PORTC << 1;
   731  0734  0807               	movf	7,w	;volatile
   732  0735  00F0               	movwf	??_cont_uno
   733  0736  0770               	addwf	??_cont_uno,w
   734  0737  0087               	movwf	7	;volatile
   735  0738                     l701:
   736                           
   737                           ;Lab 1.c: 116:         if (PORTCbits.RC7 == 1)
   738  0738  1F87               	btfss	7,7	;volatile
   739  0739  2F3B               	goto	u31
   740  073A  2F3C               	goto	u30
   741  073B                     u31:
   742  073B  2F42               	goto	l62
   743  073C                     u30:
   744  073C                     l703:
   745                           
   746                           ;Lab 1.c: 117:         { PORTBbits.RB3 = 1;
   747  073C  1586               	bsf	6,3	;volatile
   748  073D                     l705:
   749                           
   750                           ;Lab 1.c: 118:             PORTC = 255;
   751  073D  30FF               	movlw	255
   752  073E  0087               	movwf	7	;volatile
   753  073F                     l707:
   754                           
   755                           ;Lab 1.c: 119:             flag = 0;
   756  073F  01F8               	clrf	_flag
   757  0740  01F9               	clrf	_flag+1
   758                           
   759                           ;Lab 1.c: 120:         }
   760  0741  2F43               	goto	l64
   761  0742                     l62:	
   762                           ;Lab 1.c: 121:         else
   763                           
   764                           
   765                           ;Lab 1.c: 122:         { PORTBbits.RB3 = 0; }
   766  0742  1186               	bcf	6,3	;volatile
   767  0743                     l64:
   768  0743  0008               	return
   769  0744                     __end_of_cont_uno:
   770                           
   771                           	psect	text4
   772  0708                     __ptext4:	
   773 ;; *************** function _cont_dos *****************
   774 ;; Defined at:
   775 ;;		line 127 in file "Lab 1.c"
   776 ;; Parameters:    Size  Location     Type
   777 ;;		None
   778 ;; Auto vars:     Size  Location     Type
   779 ;;		None
   780 ;; Return value:  Size  Location     Type
   781 ;;                  1    wreg      void 
   782 ;; Registers used:
   783 ;;		wreg, status,2, status,0, btemp+1
   784 ;; Tracked objects:
   785 ;;		On entry : 0/0
   786 ;;		On exit  : 0/0
   787 ;;		Unchanged: 0/0
   788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   789 ;;      Params:         0       0       0       0       0
   790 ;;      Locals:         0       0       0       0       0
   791 ;;      Temps:          1       0       0       0       0
   792 ;;      Totals:         1       0       0       0       0
   793 ;;Total ram usage:        1 bytes
   794 ;; Hardware stack levels used:    1
   795 ;; This function calls:
   796 ;;		Nothing
   797 ;; This function is called by:
   798 ;;		_main
   799 ;; This function uses a non-reentrant model
   800 ;;
   801                           
   802                           
   803                           ;psect for function _cont_dos
   804  0708                     _cont_dos:
   805  0708                     l709:	
   806                           ;incstack = 0
   807                           ; Regs used in _cont_dos: [wreg+status,2+status,0+btemp+1]
   808                           
   809                           
   810                           ;Lab 1.c: 128:     if (PORTD == 0)
   811  0708  1283               	bcf	3,5	;RP0=0, select bank0
   812  0709  1303               	bcf	3,6	;RP1=0, select bank0
   813  070A  0808               	movf	8,w	;volatile
   814  070B  1D03               	btfss	3,2
   815  070C  2F0E               	goto	u41
   816  070D  2F0F               	goto	u40
   817  070E                     u41:
   818  070E  2F16               	goto	l715
   819  070F                     u40:
   820  070F                     l711:
   821                           
   822                           ;Lab 1.c: 129:     { PORTD = PORTD++; }
   823  070F  0808               	movf	8,w	;volatile
   824  0710  0088               	movwf	8	;volatile
   825  0711                     l713:
   826  0711  3001               	movlw	1
   827  0712  00FF               	movwf	btemp+1
   828  0713  087F               	movf	btemp+1,w
   829  0714  0788               	addwf	8,f	;volatile
   830  0715  2F25               	goto	l71
   831  0716                     l715:
   832                           
   833                           ;Lab 1.c: 132:     {;Lab 1.c: 133:         PORTD = PORTD << 1;
   834  0716  0808               	movf	8,w	;volatile
   835  0717  00F0               	movwf	??_cont_dos
   836  0718  0770               	addwf	??_cont_dos,w
   837  0719  0088               	movwf	8	;volatile
   838  071A                     l717:
   839                           
   840                           ;Lab 1.c: 134:         if (PORTDbits.RD7 == 1)
   841  071A  1F88               	btfss	8,7	;volatile
   842  071B  2F1D               	goto	u51
   843  071C  2F1E               	goto	u50
   844  071D                     u51:
   845  071D  2F24               	goto	l69
   846  071E                     u50:
   847  071E                     l719:
   848                           
   849                           ;Lab 1.c: 135:         { PORTBbits.RB4 = 1;
   850  071E  1606               	bsf	6,4	;volatile
   851  071F                     l721:
   852                           
   853                           ;Lab 1.c: 136:             PORTD = 255;
   854  071F  30FF               	movlw	255
   855  0720  0088               	movwf	8	;volatile
   856  0721                     l723:
   857                           
   858                           ;Lab 1.c: 137:             flag = 0;
   859  0721  01F8               	clrf	_flag
   860  0722  01F9               	clrf	_flag+1
   861                           
   862                           ;Lab 1.c: 138:         }
   863  0723  2F25               	goto	l71
   864  0724                     l69:	
   865                           ;Lab 1.c: 139:         else
   866                           
   867                           
   868                           ;Lab 1.c: 140:         { PORTBbits.RB4 = 0; }
   869  0724  1206               	bcf	6,4	;volatile
   870  0725                     l71:
   871  0725  0008               	return
   872  0726                     __end_of_cont_dos:
   873  007E                     btemp	set	126	;btemp
   874  007E                     wtemp0	set	126
   875                           
   876                           	psect	config
   877                           
   878                           ;Config register CONFIG1 @ 0x2007
   879                           ;	Oscillator Selection bits
   880                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   881                           ;	Watchdog Timer Enable bit
   882                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   883                           ;	Power-up Timer Enable bit
   884                           ;	PWRTE = OFF, PWRT disabled
   885                           ;	RE3/MCLR pin function select bit
   886                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   887                           ;	Code Protection bit
   888                           ;	CP = OFF, Program memory code protection is disabled
   889                           ;	Data Code Protection bit
   890                           ;	CPD = OFF, Data memory code protection is disabled
   891                           ;	Brown Out Reset Selection bits
   892                           ;	BOREN = OFF, BOR disabled
   893                           ;	Internal External Switchover bit
   894                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   895                           ;	Fail-Safe Clock Monitor Enabled bit
   896                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   897                           ;	Low Voltage Programming Enable bit
   898                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   899                           ;	In-Circuit Debugger Mode bit
   900                           ;	DEBUG = 0x1, unprogrammed default
   901  2007                     	org	8199
   902  2007  20D4               	dw	8404
   903                           
   904                           ;Config register CONFIG2 @ 0x2008
   905                           ;	Brown-out Reset Selection bit
   906                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   907                           ;	Flash Program Memory Self Write Enable bits
   908                           ;	WRT = OFF, Write protection off
   909  2008                     	org	8200
   910  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_semaforo

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      30
                                              5 COMMON     3     3      0
                           _cont_dos
                           _cont_uno
                           _semaforo
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _semaforo                                             5     5      0      30
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _cont_uno                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _cont_dos                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cont_dos
   _cont_uno
   _semaforo
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Fri Jan 29 00:03:05 2021

                     l52 0761                       l62 0742                       l71 0725  
                     l64 0743                       l57 07A3                       l69 0724  
                     u10 079A                       u11 0799                       u20 072D  
                     u21 072C                       u30 073C                       u31 073B  
                     u15 0796                       u40 070F                       u41 070E  
                     u50 071E                       u51 071D                       u60 07AF  
                     u61 07AE                       u70 07B5                       u71 07B4  
                     u80 07C0                       u81 07BF                       u90 07C6  
                     u91 07C5                      l701 0738                      l711 070F  
                    l703 073C                      l721 071F                      l713 0711  
                    l705 073D                      l723 0721                      l715 0716  
                    l707 073F                      l731 07B5                      l717 071A  
                    l709 0708                      l741 07D8                      l733 07BA  
                    l725 07A4                      l719 071E                      l671 0773  
                    l663 0744                      l743 07DE                      l735 07C0  
                    l727 07A9                      l681 0787                      l665 075A  
                    l745 07E4                      l737 07C6                      l729 07AF  
                    l691 07A2                      l683 078D                      l667 075E  
                    l747 07E9                      l739 07CB                      l693 0726  
                    l685 079A                      l677 0775                      l669 0762  
                    l695 072D                      l687 079E                      l679 077B  
                    l697 072F                      l689 07A1                      l699 0734  
                    u100 07DE                      u101 07DD                      u110 07E4  
                    u111 07E3                      u127 07D1                      u137 07EF  
                    u147 076C                      u157 0781                     _flag 0078  
                   _main 07A4                     btemp 007E                     start 0000  
                  ?_main 0070                    _ANSEL 0188                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _setup 0744                    status 0003  
                  wtemp0 007E          __initialization 07FA             __end_of_main 07FA  
                 ??_main 0075                   ?_setup 0070                   _ANSELH 0189  
       __end_of_cont_dos 0726         __end_of_cont_uno 0744         __end_of_semaforo 07A4  
__end_of__initialization 07FC           __pcstackCOMMON 0070            __end_of_setup 0762  
                ??_setup 0070               __pmaintext 07A4                ?_cont_dos 0070  
              ?_cont_uno 0070                ?_semaforo 0070                  __ptext1 0744  
                __ptext2 0762                  __ptext3 0726                  __ptext4 0708  
   end_of_initialization 07FC               ??_cont_dos 0070               ??_cont_uno 0070  
             ??_semaforo 0070                _PORTBbits 0006                _PORTCbits 0007  
              _PORTDbits 0008      start_initialization 07FA              __pbssCOMMON 0078  
              ___latbits 0002        __size_of_cont_dos 001E        __size_of_cont_uno 001E  
      __size_of_semaforo 0042           __size_of_setup 001E                 _cont_dos 0708  
               _cont_uno 0726                semaforo@i 0073            __size_of_main 0056  
               _semaforo 0762  
