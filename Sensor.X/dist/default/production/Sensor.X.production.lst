

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Feb 23 22:10:09 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  0105                     	;# 
   190  0107                     	;# 
   191  0108                     	;# 
   192  0109                     	;# 
   193  010C                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  0185                     	;# 
   199  0187                     	;# 
   200  0188                     	;# 
   201  0189                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0007                     _PORTC	set	7
   205  0008                     _PORTD	set	8
   206  0006                     _PORTB	set	6
   207  001E                     _ADRESH	set	30
   208  001F                     _ADCON0	set	31
   209  00F9                     _GO_nDONE	set	249
   210  0088                     _TRISD	set	136
   211  0087                     _TRISC	set	135
   212  0086                     _TRISB	set	134
   213  0085                     _TRISA	set	133
   214  009F                     _ADCON1	set	159
   215                           
   216                           	psect	cinit
   217  07FC                     start_initialization:	
   218                           ; #config settings
   219                           
   220  07FC                     __initialization:
   221  07FC                     end_of_initialization:	
   222                           ;End of C runtime variable initialization code
   223                           
   224  07FC                     __end_of__initialization:
   225  07FC  0183               	clrf	3
   226  07FD  120A  118A  2F88   	ljmp	_main	;jump to C main() function
   227                           
   228                           	psect	cstackCOMMON
   229  0070                     __pcstackCOMMON:
   230  0070                     ?_setup:
   231  0070                     ??_setup:	
   232                           ; 1 bytes @ 0x0
   233                           
   234  0070                     ?_ADC_Init:	
   235                           ; 1 bytes @ 0x0
   236                           
   237  0070                     ??_ADC_Init:	
   238                           ; 1 bytes @ 0x0
   239                           
   240  0070                     ?_main:	
   241                           ; 1 bytes @ 0x0
   242                           
   243  0070                     ?_ADC_Read:	
   244                           ; 1 bytes @ 0x0
   245                           
   246  0070                     ?___wmul:	
   247                           ; 2 bytes @ 0x0
   248                           
   249  0070                     ___wmul@multiplier:	
   250                           ; 2 bytes @ 0x0
   251                           
   252                           
   253                           ; 2 bytes @ 0x0
   254  0070                     	ds	2
   255  0072                     ??_ADC_Read:
   256  0072                     ___wmul@multiplicand:	
   257                           ; 1 bytes @ 0x2
   258                           
   259                           
   260                           ; 2 bytes @ 0x2
   261  0072                     	ds	2
   262  0074                     ??___wmul:
   263  0074                     ADC_Read@channel:	
   264                           ; 1 bytes @ 0x4
   265                           
   266  0074                     ___wmul@product:	
   267                           ; 1 bytes @ 0x4
   268                           
   269                           
   270                           ; 2 bytes @ 0x4
   271  0074                     	ds	2
   272  0076                     ??_main:
   273                           
   274                           ; 1 bytes @ 0x6
   275  0076                     	ds	2
   276  0078                     main@VT:
   277                           
   278                           ; 2 bytes @ 0x8
   279  0078                     	ds	2
   280  007A                     main@ADCV:
   281                           
   282                           ; 2 bytes @ 0xA
   283  007A                     	ds	2
   284                           
   285                           	psect	maintext
   286  0788                     __pmaintext:	
   287 ;;
   288 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   289 ;;
   290 ;; *************** function _main *****************
   291 ;; Defined at:
   292 ;;		line 56 in file "sensor1.c"
   293 ;; Parameters:    Size  Location     Type
   294 ;;		None
   295 ;; Auto vars:     Size  Location     Type
   296 ;;  ADCV            2   10[COMMON] unsigned int 
   297 ;;  VT              2    8[COMMON] unsigned int 
   298 ;; Return value:  Size  Location     Type
   299 ;;                  1    wreg      void 
   300 ;; Registers used:
   301 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   302 ;; Tracked objects:
   303 ;;		On entry : B00/0
   304 ;;		On exit  : 0/0
   305 ;;		Unchanged: 0/0
   306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   307 ;;      Params:         0       0       0       0       0
   308 ;;      Locals:         4       0       0       0       0
   309 ;;      Temps:          2       0       0       0       0
   310 ;;      Totals:         6       0       0       0       0
   311 ;;Total ram usage:        6 bytes
   312 ;; Hardware stack levels required when called:    1
   313 ;; This function calls:
   314 ;;		_ADC_Init
   315 ;;		_ADC_Read
   316 ;;		___wmul
   317 ;;		_setup
   318 ;; This function is called by:
   319 ;;		Startup code after reset
   320 ;; This function uses a non-reentrant model
   321 ;;
   322                           
   323                           
   324                           ;psect for function _main
   325  0788                     _main:
   326  0788                     l750:	
   327                           ;incstack = 0
   328                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   329                           
   330  0788                     l752:
   331                           
   332                           ;sensor1.c: 59:   unsigned int ADCV;;sensor1.c: 63:   setup();
   333  0788  120A  118A  271B  120A  118A  	fcall	_setup
   334  078D                     l754:
   335                           
   336                           ;sensor1.c: 64:   ADC_Init();
   337  078D  120A  118A  2713  120A  118A  	fcall	_ADC_Init
   338  0792                     l756:
   339                           
   340                           ;sensor1.c: 67:     VT = ADC_Read(0);
   341  0792  3000               	movlw	0
   342  0793  120A  118A  2750  120A  118A  	fcall	_ADC_Read
   343  0798  0871               	movf	?_ADC_Read+1,w
   344  0799  00F9               	movwf	main@VT+1
   345  079A  0870               	movf	?_ADC_Read,w
   346  079B  00F8               	movwf	main@VT
   347  079C                     l758:
   348                           
   349                           ;sensor1.c: 70:     PORTB = VT>>8;
   350  079C  0879               	movf	main@VT+1,w
   351  079D  1283               	bcf	3,5	;RP0=0, select bank0
   352  079E  1303               	bcf	3,6	;RP1=0, select bank0
   353  079F  0086               	movwf	6	;volatile
   354  07A0                     l760:
   355                           
   356                           ;sensor1.c: 71:     _delay((unsigned long)((3)*(8000000/4000.0)));
   357  07A0  3008               	movlw	8
   358  07A1  00F7               	movwf	??_main+1
   359  07A2  30C9               	movlw	201
   360  07A3  00F6               	movwf	??_main
   361  07A4                     u257:
   362  07A4  0BF6               	decfsz	??_main,f
   363  07A5  2FA4               	goto	u257
   364  07A6  0BF7               	decfsz	??_main+1,f
   365  07A7  2FA4               	goto	u257
   366  07A8  2FA9               	nop2
   367  07A9                     l762:
   368                           
   369                           ;sensor1.c: 73:     ADCV = (VT*5)/1024;
   370  07A9  0879               	movf	main@VT+1,w
   371  07AA  00F1               	movwf	___wmul@multiplier+1
   372  07AB  0878               	movf	main@VT,w
   373  07AC  00F0               	movwf	___wmul@multiplier
   374  07AD  3005               	movlw	5
   375  07AE  00F2               	movwf	___wmul@multiplicand
   376  07AF  3000               	movlw	0
   377  07B0  00F3               	movwf	___wmul@multiplicand+1
   378  07B1  120A  118A  272B  120A  118A  	fcall	___wmul
   379  07B6  0870               	movf	?___wmul,w
   380  07B7  00F6               	movwf	??_main
   381  07B8  0871               	movf	?___wmul+1,w
   382  07B9  00F7               	movwf	??_main+1
   383  07BA  300A               	movlw	10
   384  07BB                     u205:
   385  07BB  1003               	clrc
   386  07BC  0CF7               	rrf	??_main+1,f
   387  07BD  0CF6               	rrf	??_main,f
   388  07BE  3EFF               	addlw	-1
   389  07BF  1D03               	skipz
   390  07C0  2FBB               	goto	u205
   391  07C1  0876               	movf	??_main,w
   392  07C2  00FA               	movwf	main@ADCV
   393  07C3  0877               	movf	??_main+1,w
   394  07C4  00FB               	movwf	main@ADCV+1
   395  07C5                     l764:
   396                           
   397                           ;sensor1.c: 75:     if ( ADCV<= 16)
   398  07C5  3000               	movlw	0
   399  07C6  027B               	subwf	main@ADCV+1,w
   400  07C7  3011               	movlw	17
   401  07C8  1903               	skipnz
   402  07C9  027A               	subwf	main@ADCV,w
   403  07CA  1803               	skipnc
   404  07CB  2FCD               	goto	u211
   405  07CC  2FCE               	goto	u210
   406  07CD                     u211:
   407  07CD  2FD3               	goto	l768
   408  07CE                     u210:
   409  07CE                     l766:
   410                           
   411                           ;sensor1.c: 76:     {PORTD = 0b00000001;}
   412  07CE  3001               	movlw	1
   413  07CF  1283               	bcf	3,5	;RP0=0, select bank0
   414  07D0  1303               	bcf	3,6	;RP1=0, select bank0
   415  07D1  0088               	movwf	8	;volatile
   416  07D2  2F92               	goto	l756
   417  07D3                     l768:
   418  07D3  3000               	movlw	0
   419  07D4  027B               	subwf	main@ADCV+1,w
   420  07D5  3011               	movlw	17
   421  07D6  1903               	skipnz
   422  07D7  027A               	subwf	main@ADCV,w
   423  07D8  1C03               	skipc
   424  07D9  2FDB               	goto	u221
   425  07DA  2FDC               	goto	u220
   426  07DB                     u221:
   427  07DB  2FEA               	goto	l774
   428  07DC                     u220:
   429  07DC                     l770:
   430  07DC  3000               	movlw	0
   431  07DD  027B               	subwf	main@ADCV+1,w
   432  07DE  3017               	movlw	23
   433  07DF  1903               	skipnz
   434  07E0  027A               	subwf	main@ADCV,w
   435  07E1  1803               	skipnc
   436  07E2  2FE4               	goto	u231
   437  07E3  2FE5               	goto	u230
   438  07E4                     u231:
   439  07E4  2FEA               	goto	l774
   440  07E5                     u230:
   441  07E5                     l772:
   442                           
   443                           ;sensor1.c: 79:     {PORTD = 0b00000011;}
   444  07E5  3003               	movlw	3
   445  07E6  1283               	bcf	3,5	;RP0=0, select bank0
   446  07E7  1303               	bcf	3,6	;RP1=0, select bank0
   447  07E8  0088               	movwf	8	;volatile
   448  07E9  2F92               	goto	l756
   449  07EA                     l774:
   450  07EA  3000               	movlw	0
   451  07EB  027B               	subwf	main@ADCV+1,w
   452  07EC  3017               	movlw	23
   453  07ED  1903               	skipnz
   454  07EE  027A               	subwf	main@ADCV,w
   455  07EF  1C03               	skipc
   456  07F0  2FF2               	goto	u241
   457  07F1  2FF3               	goto	u240
   458  07F2                     u241:
   459  07F2  2FF8               	goto	l42
   460  07F3                     u240:
   461  07F3                     l776:
   462                           
   463                           ;sensor1.c: 82:     {PORTD = 0b00000111;}
   464  07F3  3007               	movlw	7
   465  07F4  1283               	bcf	3,5	;RP0=0, select bank0
   466  07F5  1303               	bcf	3,6	;RP1=0, select bank0
   467  07F6  0088               	movwf	8	;volatile
   468  07F7  2F92               	goto	l756
   469  07F8                     l42:
   470  07F8  2F92               	goto	l756
   471  07F9  120A  118A  2800   	ljmp	start
   472  07FC                     __end_of_main:
   473                           
   474                           	psect	text1
   475  071B                     __ptext1:	
   476 ;; *************** function _setup *****************
   477 ;; Defined at:
   478 ;;		line 97 in file "sensor1.c"
   479 ;; Parameters:    Size  Location     Type
   480 ;;		None
   481 ;; Auto vars:     Size  Location     Type
   482 ;;		None
   483 ;; Return value:  Size  Location     Type
   484 ;;                  1    wreg      void 
   485 ;; Registers used:
   486 ;;		wreg, status,2
   487 ;; Tracked objects:
   488 ;;		On entry : 0/0
   489 ;;		On exit  : 0/0
   490 ;;		Unchanged: 0/0
   491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   492 ;;      Params:         0       0       0       0       0
   493 ;;      Locals:         0       0       0       0       0
   494 ;;      Temps:          0       0       0       0       0
   495 ;;      Totals:         0       0       0       0       0
   496 ;;Total ram usage:        0 bytes
   497 ;; Hardware stack levels used:    1
   498 ;; This function calls:
   499 ;;		Nothing
   500 ;; This function is called by:
   501 ;;		_main
   502 ;; This function uses a non-reentrant model
   503 ;;
   504                           
   505                           
   506                           ;psect for function _setup
   507  071B                     _setup:
   508  071B                     l662:	
   509                           ;incstack = 0
   510                           ; Regs used in _setup: [wreg+status,2]
   511                           
   512                           
   513                           ;sensor1.c: 99:   TRISA = 0xFF;
   514  071B  30FF               	movlw	255
   515  071C  1683               	bsf	3,5	;RP0=1, select bank1
   516  071D  1303               	bcf	3,6	;RP1=0, select bank1
   517  071E  0085               	movwf	5	;volatile
   518  071F                     l664:
   519                           
   520                           ;sensor1.c: 101:   TRISB = 0x00;
   521  071F  0186               	clrf	6	;volatile
   522  0720                     l666:
   523                           
   524                           ;sensor1.c: 103:   TRISC = 0;
   525  0720  0187               	clrf	7	;volatile
   526  0721                     l668:
   527                           
   528                           ;sensor1.c: 104:   PORTC = 0;
   529  0721  1283               	bcf	3,5	;RP0=0, select bank0
   530  0722  1303               	bcf	3,6	;RP1=0, select bank0
   531  0723  0187               	clrf	7	;volatile
   532  0724                     l670:
   533                           
   534                           ;sensor1.c: 106:   TRISD = 0;
   535  0724  1683               	bsf	3,5	;RP0=1, select bank1
   536  0725  1303               	bcf	3,6	;RP1=0, select bank1
   537  0726  0188               	clrf	8	;volatile
   538  0727                     l672:
   539                           
   540                           ;sensor1.c: 107:   PORTD = 0;
   541  0727  1283               	bcf	3,5	;RP0=0, select bank0
   542  0728  1303               	bcf	3,6	;RP1=0, select bank0
   543  0729  0188               	clrf	8	;volatile
   544  072A                     l54:
   545  072A  0008               	return
   546  072B                     __end_of_setup:
   547                           
   548                           	psect	text2
   549  072B                     __ptext2:	
   550 ;; *************** function ___wmul *****************
   551 ;; Defined at:
   552 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul16.c"
   553 ;; Parameters:    Size  Location     Type
   554 ;;  multiplier      2    0[COMMON] unsigned int 
   555 ;;  multiplicand    2    2[COMMON] unsigned int 
   556 ;; Auto vars:     Size  Location     Type
   557 ;;  product         2    4[COMMON] unsigned int 
   558 ;; Return value:  Size  Location     Type
   559 ;;                  2    0[COMMON] unsigned int 
   560 ;; Registers used:
   561 ;;		wreg, status,2, status,0
   562 ;; Tracked objects:
   563 ;;		On entry : 0/0
   564 ;;		On exit  : 0/0
   565 ;;		Unchanged: 0/0
   566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   567 ;;      Params:         4       0       0       0       0
   568 ;;      Locals:         2       0       0       0       0
   569 ;;      Temps:          0       0       0       0       0
   570 ;;      Totals:         6       0       0       0       0
   571 ;;Total ram usage:        6 bytes
   572 ;; Hardware stack levels used:    1
   573 ;; This function calls:
   574 ;;		Nothing
   575 ;; This function is called by:
   576 ;;		_main
   577 ;; This function uses a non-reentrant model
   578 ;;
   579                           
   580                           
   581                           ;psect for function ___wmul
   582  072B                     ___wmul:
   583  072B                     l736:	
   584                           ;incstack = 0
   585                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   586                           
   587  072B  01F4               	clrf	___wmul@product
   588  072C  01F5               	clrf	___wmul@product+1
   589  072D                     l738:
   590  072D  1C70               	btfss	___wmul@multiplier,0
   591  072E  2F30               	goto	u161
   592  072F  2F31               	goto	u160
   593  0730                     u161:
   594  0730  2F37               	goto	l140
   595  0731                     u160:
   596  0731                     l740:
   597  0731  0872               	movf	___wmul@multiplicand,w
   598  0732  07F4               	addwf	___wmul@product,f
   599  0733  1803               	skipnc
   600  0734  0AF5               	incf	___wmul@product+1,f
   601  0735  0873               	movf	___wmul@multiplicand+1,w
   602  0736  07F5               	addwf	___wmul@product+1,f
   603  0737                     l140:
   604  0737  3001               	movlw	1
   605  0738                     u175:
   606  0738  1003               	clrc
   607  0739  0DF2               	rlf	___wmul@multiplicand,f
   608  073A  0DF3               	rlf	___wmul@multiplicand+1,f
   609  073B  3EFF               	addlw	-1
   610  073C  1D03               	skipz
   611  073D  2F38               	goto	u175
   612  073E                     l742:
   613  073E  3001               	movlw	1
   614  073F                     u185:
   615  073F  1003               	clrc
   616  0740  0CF1               	rrf	___wmul@multiplier+1,f
   617  0741  0CF0               	rrf	___wmul@multiplier,f
   618  0742  3EFF               	addlw	-1
   619  0743  1D03               	skipz
   620  0744  2F3F               	goto	u185
   621  0745                     l744:
   622  0745  0870               	movf	___wmul@multiplier,w
   623  0746  0471               	iorwf	___wmul@multiplier+1,w
   624  0747  1D03               	btfss	3,2
   625  0748  2F4A               	goto	u191
   626  0749  2F4B               	goto	u190
   627  074A                     u191:
   628  074A  2F2D               	goto	l738
   629  074B                     u190:
   630  074B                     l746:
   631  074B  0875               	movf	___wmul@product+1,w
   632  074C  00F1               	movwf	?___wmul+1
   633  074D  0874               	movf	___wmul@product,w
   634  074E  00F0               	movwf	?___wmul
   635  074F                     l142:
   636  074F  0008               	return
   637  0750                     __end_of___wmul:
   638                           
   639                           	psect	text3
   640  0750                     __ptext3:	
   641 ;; *************** function _ADC_Read *****************
   642 ;; Defined at:
   643 ;;		line 39 in file "sensor1.c"
   644 ;; Parameters:    Size  Location     Type
   645 ;;  channel         1    wreg     unsigned char 
   646 ;; Auto vars:     Size  Location     Type
   647 ;;  channel         1    4[COMMON] unsigned char 
   648 ;; Return value:  Size  Location     Type
   649 ;;                  2    0[COMMON] unsigned int 
   650 ;; Registers used:
   651 ;;		wreg, status,2, status,0, btemp+1
   652 ;; Tracked objects:
   653 ;;		On entry : 0/0
   654 ;;		On exit  : 0/0
   655 ;;		Unchanged: 0/0
   656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   657 ;;      Params:         2       0       0       0       0
   658 ;;      Locals:         1       0       0       0       0
   659 ;;      Temps:          2       0       0       0       0
   660 ;;      Totals:         5       0       0       0       0
   661 ;;Total ram usage:        5 bytes
   662 ;; Hardware stack levels used:    1
   663 ;; This function calls:
   664 ;;		Nothing
   665 ;; This function is called by:
   666 ;;		_main
   667 ;; This function uses a non-reentrant model
   668 ;;
   669                           
   670                           
   671                           ;psect for function _ADC_Read
   672  0750                     _ADC_Read:
   673                           
   674                           ;incstack = 0
   675                           ; Regs used in _ADC_Read: [wreg+status,2+status,0+btemp+1]
   676                           ;ADC_Read@channel stored from wreg
   677  0750  00F4               	movwf	ADC_Read@channel
   678  0751                     l720:
   679                           
   680                           ;sensor1.c: 39: unsigned int ADC_Read(unsigned char channel);sensor1.c: 40: {;sensor1.c:
      +                           41:   if(channel > 7)
   681  0751  3008               	movlw	8
   682  0752  0274               	subwf	ADC_Read@channel,w
   683  0753  1C03               	skipc
   684  0754  2F56               	goto	u131
   685  0755  2F57               	goto	u130
   686  0756                     u131:
   687  0756  2F5A               	goto	l726
   688  0757                     u130:
   689  0757                     l722:
   690                           
   691                           ;sensor1.c: 42:     return 0;
   692  0757  01F0               	clrf	?_ADC_Read
   693  0758  01F1               	clrf	?_ADC_Read+1
   694  0759  2F87               	goto	l32
   695  075A                     l726:
   696                           
   697                           ;sensor1.c: 44:   ADCON0 &= 0xC5;
   698  075A  30C5               	movlw	197
   699  075B  00FF               	movwf	btemp+1
   700  075C  087F               	movf	btemp+1,w
   701  075D  1283               	bcf	3,5	;RP0=0, select bank0
   702  075E  1303               	bcf	3,6	;RP1=0, select bank0
   703  075F  059F               	andwf	31,f	;volatile
   704                           
   705                           ;sensor1.c: 45:   ADCON0 |= channel<<3;
   706  0760  0874               	movf	ADC_Read@channel,w	;volatile
   707  0761  00F2               	movwf	??_ADC_Read
   708  0762  3002               	movlw	2
   709  0763                     u145:
   710  0763  1003               	clrc
   711  0764  0DF2               	rlf	??_ADC_Read,f
   712  0765  3EFF               	addlw	-1
   713  0766  1D03               	skipz
   714  0767  2F63               	goto	u145
   715  0768  1003               	clrc
   716  0769  0D72               	rlf	??_ADC_Read,w
   717  076A  00FF               	movwf	btemp+1
   718  076B  087F               	movf	btemp+1,w
   719  076C  049F               	iorwf	31,f	;volatile
   720  076D                     l728:
   721                           
   722                           ;sensor1.c: 46:   _delay((unsigned long)((2)*(8000000/4000.0)));
   723  076D  3006               	movlw	6
   724  076E  00F3               	movwf	??_ADC_Read+1
   725  076F  3030               	movlw	48
   726  0770  00F2               	movwf	??_ADC_Read
   727  0771                     u267:
   728  0771  0BF2               	decfsz	??_ADC_Read,f
   729  0772  2F71               	goto	u267
   730  0773  0BF3               	decfsz	??_ADC_Read+1,f
   731  0774  2F71               	goto	u267
   732  0775  0000               	nop
   733  0776                     l730:
   734                           
   735                           ;sensor1.c: 47:   GO_nDONE = 1;
   736  0776  1283               	bcf	3,5	;RP0=0, select bank0
   737  0777  1303               	bcf	3,6	;RP1=0, select bank0
   738  0778  149F               	bsf	31,1	;volatile
   739  0779                     l33:	
   740                           ;sensor1.c: 48:   while(GO_nDONE);
   741                           
   742  0779  189F               	btfsc	31,1	;volatile
   743  077A  2F7C               	goto	u151
   744  077B  2F7D               	goto	u150
   745  077C                     u151:
   746  077C  2F79               	goto	l33
   747  077D                     u150:
   748  077D                     l732:
   749                           
   750                           ;sensor1.c: 49:   return (ADRESH<<8);
   751  077D  081E               	movf	30,w	;volatile
   752  077E  00F2               	movwf	??_ADC_Read
   753  077F  01F3               	clrf	??_ADC_Read+1
   754  0780  0872               	movf	??_ADC_Read,w
   755  0781  00F3               	movwf	??_ADC_Read+1
   756  0782  01F2               	clrf	??_ADC_Read
   757  0783  0872               	movf	??_ADC_Read,w
   758  0784  00F0               	movwf	?_ADC_Read
   759  0785  0873               	movf	??_ADC_Read+1,w
   760  0786  00F1               	movwf	?_ADC_Read+1
   761  0787                     l32:
   762  0787  0008               	return
   763  0788                     __end_of_ADC_Read:
   764                           
   765                           	psect	text4
   766  0713                     __ptext4:	
   767 ;; *************** function _ADC_Init *****************
   768 ;; Defined at:
   769 ;;		line 91 in file "sensor1.c"
   770 ;; Parameters:    Size  Location     Type
   771 ;;		None
   772 ;; Auto vars:     Size  Location     Type
   773 ;;		None
   774 ;; Return value:  Size  Location     Type
   775 ;;                  1    wreg      void 
   776 ;; Registers used:
   777 ;;		wreg, status,2
   778 ;; Tracked objects:
   779 ;;		On entry : 0/0
   780 ;;		On exit  : 0/0
   781 ;;		Unchanged: 0/0
   782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   783 ;;      Params:         0       0       0       0       0
   784 ;;      Locals:         0       0       0       0       0
   785 ;;      Temps:          0       0       0       0       0
   786 ;;      Totals:         0       0       0       0       0
   787 ;;Total ram usage:        0 bytes
   788 ;; Hardware stack levels used:    1
   789 ;; This function calls:
   790 ;;		Nothing
   791 ;; This function is called by:
   792 ;;		_main
   793 ;; This function uses a non-reentrant model
   794 ;;
   795                           
   796                           
   797                           ;psect for function _ADC_Init
   798  0713                     _ADC_Init:
   799  0713                     l674:	
   800                           ;incstack = 0
   801                           ; Regs used in _ADC_Init: [wreg+status,2]
   802                           
   803                           
   804                           ;sensor1.c: 93:   ADCON0 = 0x81;
   805  0713  3081               	movlw	129
   806  0714  1283               	bcf	3,5	;RP0=0, select bank0
   807  0715  1303               	bcf	3,6	;RP1=0, select bank0
   808  0716  009F               	movwf	31	;volatile
   809  0717                     l676:
   810                           
   811                           ;sensor1.c: 94:   ADCON1 = 0x00;
   812  0717  1683               	bsf	3,5	;RP0=1, select bank1
   813  0718  1303               	bcf	3,6	;RP1=0, select bank1
   814  0719  019F               	clrf	31	;volatile
   815  071A                     l51:
   816  071A  0008               	return
   817  071B                     __end_of_ADC_Init:
   818  007E                     btemp	set	126	;btemp
   819  007E                     wtemp0	set	126
   820                           
   821                           	psect	config
   822                           
   823                           ;Config register CONFIG1 @ 0x2007
   824                           ;	Oscillator Selection bits
   825                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   826                           ;	Watchdog Timer Enable bit
   827                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   828                           ;	Power-up Timer Enable bit
   829                           ;	PWRTE = OFF, PWRT disabled
   830                           ;	RE3/MCLR pin function select bit
   831                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   832                           ;	Code Protection bit
   833                           ;	CP = OFF, Program memory code protection is disabled
   834                           ;	Data Code Protection bit
   835                           ;	CPD = OFF, Data memory code protection is disabled
   836                           ;	Brown Out Reset Selection bits
   837                           ;	BOREN = OFF, BOR disabled
   838                           ;	Internal External Switchover bit
   839                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   840                           ;	Fail-Safe Clock Monitor Enabled bit
   841                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   842                           ;	Low Voltage Programming Enable bit
   843                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   844                           ;	In-Circuit Debugger Mode bit
   845                           ;	DEBUG = 0x1, unprogrammed default
   846  2007                     	org	8199
   847  2007  20D4               	dw	8404
   848                           
   849                           ;Config register CONFIG2 @ 0x2008
   850                           ;	Brown-out Reset Selection bit
   851                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   852                           ;	Flash Program Memory Self Write Enable bits
   853                           ;	WRT = OFF, Write protection off
   854  2008                     	org	8200
   855  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0     423
                                              6 COMMON     6     6      0
                           _ADC_Init
                           _ADC_Read
                             ___wmul
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             5     3      2      44
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   ___wmul
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Feb 23 22:10:09 2021

                     l32 0787                       l33 0779                       l42 07F8  
                     l51 071A                       l54 072A      ___wmul@multiplicand 0072  
                    l140 0737                      l142 074F                      l720 0751  
                    l730 0776                      l722 0757                      l732 077D  
                    l740 0731                      l726 075A                      l742 073E  
                    l670 0724                      l662 071B                      l750 0788  
                    l728 076D                      l744 0745                      l736 072B  
                    l672 0727                      l664 071F                      l760 07A0  
                    l752 0788                      l674 0713                      l746 074B  
                    l738 072D                      l666 0720                      l770 07DC  
                    l762 07A9                      l754 078D                      l676 0717  
                    l668 0721                      l772 07E5                      l764 07C5  
                    l756 0792                      l774 07EA                      l766 07CE  
                    l758 079C                      l776 07F3                      l768 07D3  
                    u130 0757                      u210 07CE                      u131 0756  
                    u211 07CD                      u220 07DC                      u221 07DB  
                    u205 07BB                      u150 077D                      u230 07E5  
                    u151 077C                      u231 07E4                      u160 0731  
                    u240 07F3                      u145 0763                      u161 0730  
                    u241 07F2                      u190 074B                      u191 074A  
                    u175 0738                      u185 073F                      u257 07A4  
                    u267 0771                     _main 0788                     btemp 007E  
       __end_of_ADC_Init 071B         __end_of_ADC_Read 0788                     start 0000  
                  ?_main 0070                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _setup 071B  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 07FC                   ??_main 0076                   _ADCON0 001F  
                 _ADCON1 009F                   _ADRESH 001E                   ?_setup 0070  
                 ___wmul 072B          ADC_Read@channel 0074                   main@VT 0078  
              ?_ADC_Init 0070                ?_ADC_Read 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070            __end_of_setup 072B               ??_ADC_Init 0070  
             ??_ADC_Read 0072                  ??_setup 0070               __pmaintext 0788  
                ?___wmul 0070          __size_of___wmul 0025                  __ptext1 071B  
                __ptext2 072B                  __ptext3 0750                  __ptext4 0713  
   end_of_initialization 07FC        __size_of_ADC_Init 0008        __size_of_ADC_Read 0038  
         __end_of___wmul 0750      start_initialization 07FC                 ??___wmul 0074  
              ___latbits 0002                 _ADC_Init 0713                 _ADC_Read 0750  
         __size_of_setup 0010           ___wmul@product 0074                 _GO_nDONE 00F9  
      ___wmul@multiplier 0070            __size_of_main 0074                 main@ADCV 007A  
